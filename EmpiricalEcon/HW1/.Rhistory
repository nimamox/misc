)
colnames(df3) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 13: chunk2-3-table
print(xtable(df3, caption="OLS Estimation - Independent, Omit", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
#get rid of row counters, and center over decimal)
# Chunk 14: chunk3-1
m <- c(2, 3)
V <- matrix(c(1, 0.8, 0.8, 1), nrow=2)
X <- mvrnorm(n=n, m, V)
x1 <- X[, 1]
x2 <- X[, 2]
# Chunk 15: chunk3-2
plot(x1, x2)
# Chunk 16: chunk3-3
df <- data.frame("var"=c("$x_1$", "$x_2$"),
"mean"=c(mean(x1), mean(x2)),
"std"=c(sd(x1), sd(x2)),
"min"=c(min(x1), min(x2)),
"max"=c(max(x1), max(x2)),
"correlation"=c(cor(x1, x2), cor(x1, x2))
)
# Chunk 17: chunk3-3-table
print(xtable(df, caption="Summary statistics for $x_1$ and $x_2$", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 18: chunk3-4
X <- cbind(rep(1, n), x1, x2)
bvec <- c(1, 1, -1)
y <- X %*% bvec + eps
k <- ncol(X)
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
# Chunk 19: chunk3-5
df4 <- data.frame(col1=c("constant", "$x_1$", "$x_2$"),
col2=bvec,
col3=bols,
col4=se,
col5=t
)
colnames(df4) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 20: chunk3-5-table
print(xtable(df4, caption="OLS Estimation - Independent, Omit", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
#get rid of row counters, and center over decimal)
# Chunk 21: chunk3-6
X <- X[, -k]
k <- ncol(X)
bvec <- c(1, 1)
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
# Chunk 22: chunk3-7
df5 <- data.frame(col1=c("constant", "$x_1$"),
col2=bvec,
col3=bols,
col4=se,
col5=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 23: chunk3-7-table
print(xtable(df5, caption="OLS Estimation - Correlated, Omit", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
#get rid of row counters, and center over decimal)
# Chunk 24: Q2-1
data <- read.table("/Users/nima/AAEC5126/data/wage1000.txt",
sep="\t", header=FALSE)
colnames(data) <- c("wage", "female", "nonwhite",
"unionmember", "edu",
"experience", "age")
data <- data[, -which(names(data) %in% c("age"))]
# Chunk 25: Q2-2
dftbl <- data.frame("var"=names(data), "means"=colMeans(data),
"std"=apply(data, 2, sd), "min"=apply(data, 2, min),
"max"=apply(data, 2, max))
# Chunk 26: Q2-2-table
print(xtable(dftbl, caption="Summary statistics for $x_1$ and $x_2$", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 27: Q2-3
cormat <- cor(data[, -which(names(data) %in% c("wage"))])
dftbl2 <- data.frame(cormat)
# Chunk 28: Q2-2-table
print(xtable(dftbl2, caption="Correlation across regressors", digits=3), include.rownames=TRUE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 29: Q2-3b
cormat <- cor(data[, -which(names(data) %in% c("wage"))])
library(ggplot2)
library(reshape2)
ggplot(data = melt(cormat), aes(x=Var1, y=Var2, fill=value)) + geom_tile() +
scale_fill_gradient(name = "Correlation",
low = "#FFFFFF",
high = "#012345")
# Chunk 30: Q2-4
X <- cbind(1, data[, -which(names(data) %in% c("wage"))])
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
SSR <- t(e) %*% e
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
# Chunk 31: Q2-4b
df5 <- data.frame(col1=c("constant", names(X)),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 32: chunk3-7-table
print(xtable(df5, caption="OLS Estimation - Wage data", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 33: R15
proc.time()-tic
t(X) %*% X
(t(X) %*% y)
View(X)
colname(X)[0]
colnames(X)[0]
colnames(X)
colnames(X)[1]
colnames(X)[1] <- "constant"
X <- cbind(1, data[, -which(names(data) %in% c("wage"))])
colnames(X)[1] <- "constant"
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
# e <- y - X %*% bols
# SSR <- t(e) %*% e
# s2 <- (t(e) %*% e) / (n-k)
# Vb <- s2[1, 1] * solve(t(X) %*% X)
# se <- sqrt(diag(Vb))
# t <- bols / se
solve(t(X) %*% X) %*% (t(X) %*% y)
qqq <- t(X)
View(qqq)
X <- cbind(rep(1, ncol(X)), data[, -which(names(data) %in% c("wage"))])
colnames(X)[1] <- "constant"
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
# e <- y - X %*% bols
# SSR <- t(e) %*% e
# s2 <- (t(e) %*% e) / (n-k)
# Vb <- s2[1, 1] * solve(t(X) %*% X)
# se <- sqrt(diag(Vb))
# t <- bols / se
X <- cbind(1, data[, -which(names(data) %in% c("wage"))])
X <- data[, -which(names(data) %in% c("wage"))]
colnames(X)[1] <- "constant"
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
# e <- y - X %*% bols
# SSR <- t(e) %*% e
# s2 <- (t(e) %*% e) / (n-k)
# Vb <- s2[1, 1] * solve(t(X) %*% X)
# se <- sqrt(diag(Vb))
# t <- bols / se
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
(t(X) %*% X)
(t(X) %*% as.matrix(X))
bols
X <- as.matrix(cbind(1, data[, -which(names(data) %in% c("wage"))]))
colnames(X)[1] <- "constant"
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
SSR <- t(e) %*% e
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
bols
c("constant", names(X))
names(regressors)
regressors <- cbind(1, data[, -which(names(data) %in% c("wage"))])
colnames(regressors)[1] <- "constant"
X <- as.matrix(regressors)
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
SSR <- t(e) %*% e
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
df5 <- data.frame(col1=names(regressors),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
names(regressors)
bols
se
t
names(regressors)
data.frame(col1=names(regressors),
col2=bols,
col3=se,
col4=t
)
df5 <- data.frame(col1=names(regressors),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
regressors <- cbind(1, data[, -which(names(data) %in% c("wage"))])
colnames(regressors)[1] <- "constant"
X <- as.matrix(regressors)
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
SSR <- t(e) %*% e
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
df5 <- data.frame(col1=names(regressors),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
regressors <- cbind(1, data[, -which(names(data) %in% c("wage"))])
colnames(regressors)[1] <- "constant"
cols <- colnames(regressors)
X <- as.matrix(regressors)
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
SSR <- t(e) %*% e
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
df5 <- data.frame(col1=c("a", "b", "c", "d", "e"),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
df5 <- data.frame(col1=c("a", "b", "c", "d", "e", "f"),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
df5 <- data.frame(col1=c("a", "b", "c", "d"),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
names(X)
n <- nrow(X)
names(X)
# Chunk 1: R1
rm(list = ls(all = TRUE))#first, clear R's workspace
options(prompt = "R> ", digits = 4)
setwd('/Users/nima/AAEC5126/HW1/')#change this directory as needed
options(width=60) #so R-chunks don't run over margin
tic<-proc.time() #start stop watch
library("xtable")  #you may have to install this first -> Tools / Install Packages
library("MASS") #for draws from the multivariate normal - install
#this will print a copyrights notice on your pdf - ignore...
set.seed(37)  #sets the random number generator so we can reproduce results
# Chunk 2: chunk1-1
n <- 1000
x1mean <- 2
x1std <- 1
x1 <- matrix(rnorm(n, x1mean, x1std), n)
x2mean <- 3
x2std <- 1
x2 <- matrix(rnorm(n, x2mean, x2std), n)
# Chunk 3: chunk1-2
plot(x1, x2)
# Chunk 4: chunk1-3
df <- data.frame("var"=c("$x_1$", "$x_2$"),
"mean"=c(mean(x1), mean(x2)),
"std"=c(sd(x1), sd(x2)),
"min"=c(min(x1), min(x2)),
"max"=c(max(x1), max(x2)),
"correlation"=c(cor(x1, x2), cor(x1, x2))
)
# Chunk 5: chunk1-3-table
print(xtable(df, caption="Sample statistics for $x_1$ and $x_2$", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 6: chunk1-4
eps <- rnorm(n)
X <- cbind(rep(1, n), x1, x2)
bvec <- c(1, 1, -1)
y <- X %*% bvec + eps
# Chunk 7: chunk1-5
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
k <- ncol(X)
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
SSRindep <- t(e) %*% e
# Chunk 8: chunk1-6
df2 <- data.frame(col1=c("constant", "$x_1$", "$x_2$"),
col2=bvec,
col3=bols,
col4=se,
col5=t
)
colnames(df2) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 9: chunk1-6-table
print(xtable(df2, caption="OLS Estimation - Independent, Full", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
#get rid of row counters, and center over decimal)
# Chunk 10: chunk2-1
X <- X[, -k]
k <- ncol(X)
# Chunk 11: chunk2-2
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
# Chunk 12: chunk2-3
bvec <- c(1, 1)
df3 <- data.frame(col1=c("constant", "$x_1$"),
col2=bvec,
col3=bols,
col4=se,
col5=t
)
colnames(df3) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 13: chunk2-3-table
print(xtable(df3, caption="OLS Estimation - Independent, Omit", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
#get rid of row counters, and center over decimal)
# Chunk 14: chunk3-1
m <- c(2, 3)
V <- matrix(c(1, 0.8, 0.8, 1), nrow=2)
X <- mvrnorm(n=n, m, V)
x1 <- X[, 1]
x2 <- X[, 2]
# Chunk 15: chunk3-2
plot(x1, x2)
# Chunk 16: chunk3-3
df <- data.frame("var"=c("$x_1$", "$x_2$"),
"mean"=c(mean(x1), mean(x2)),
"std"=c(sd(x1), sd(x2)),
"min"=c(min(x1), min(x2)),
"max"=c(max(x1), max(x2)),
"correlation"=c(cor(x1, x2), cor(x1, x2))
)
# Chunk 17: chunk3-3-table
print(xtable(df, caption="Sample statistics for $x_1$ and $x_2$", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 18: chunk3-4
X <- cbind(rep(1, n), x1, x2)
bvec <- c(1, 1, -1)
y <- X %*% bvec + eps
k <- ncol(X)
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
SSRcorr <- t(e) %*% e
# Chunk 19: chunk3-5
df4 <- data.frame(col1=c("constant", "$x_1$", "$x_2$"),
col2=bvec,
col3=bols,
col4=se,
col5=t
)
colnames(df4) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 20: chunk3-5-table
print(xtable(df4, caption="OLS Estimation - Correlated, Full", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
#get rid of row counters, and center over decimal)
# Chunk 21: chunk3-6
X <- X[, -k]
k <- ncol(X)
bvec <- c(1, 1)
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
# Chunk 22: chunk3-7
df5 <- data.frame(col1=c("constant", "$x_1$"),
col2=bvec,
col3=bols,
col4=se,
col5=t
)
colnames(df5) <- c("variable", "true value", "estimate", "s.e.", "t")
# Chunk 23: chunk3-7-table
print(xtable(df5, caption="OLS Estimation - Correlated, Omit", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
#get rid of row counters, and center over decimal)
# Chunk 24: Q2-1
data <- read.table("/Users/nima/AAEC5126/data/wage1000.txt",
sep="\t", header=FALSE)
colnames(data) <- c("wage", "female", "nonwhite",
"unionmember", "edu",
"experience", "age")
data <- data[, -which(names(data) %in% c("age"))]
# Chunk 25: Q2-2
dftbl <- data.frame("var"=names(data), "means"=colMeans(data),
"std"=apply(data, 2, sd), "min"=apply(data, 2, min),
"max"=apply(data, 2, max))
# Chunk 26: Q2-2-table
print(xtable(dftbl, caption="Summary statistics for $x_1$ and $x_2$", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 27: Q2-3
cormat <- cor(data[, -which(names(data) %in% c("wage"))])
dftbl2 <- data.frame(cormat)
# Chunk 28: Q2-2-table
print(xtable(dftbl2, caption="Correlation across regressors", digits=3), include.rownames=TRUE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 29: Q2-3b
cormat <- cor(data[, -which(names(data) %in% c("wage"))])
library(ggplot2)
library(reshape2)
ggplot(data = melt(cormat), aes(x=Var1, y=Var2, fill=value)) + geom_tile() +
scale_fill_gradient(name = "Correlation",
low = "#FFFFFF",
high = "#012345")
# Chunk 30: Q2-4
regressors <- cbind(1, data[, -which(names(data) %in% c("wage"))])
colnames(regressors)[1] <- "constant"
X <- as.matrix(regressors)
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
SSR <- t(e) %*% e
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
# Chunk 31: Q2-4b
df5 <- data.frame(col1=names(regressors),
col2=bols,
col3=se,
col4=t
)
colnames(df5) <- c("variable", "estimate", "s.e.", "t")
# Chunk 32: chunk4b-table
print(xtable(df5, caption="OLS Estimation - Wage data", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 33: Q2-5
regressors <- cbind(1, data[, -which(names(data) %in% c("wage", "experience"))])
colnames(regressors)[1] <- "constant"
X <- as.matrix(regressors)
k <- ncol(X)
n <- nrow(X)
y <- data[, "wage"]
bols <- solve(t(X) %*% X) %*% (t(X) %*% y)
e <- y - X %*% bols
SSR <- t(e) %*% e
s2 <- (t(e) %*% e) / (n-k)
Vb <- s2[1, 1] * solve(t(X) %*% X)
se <- sqrt(diag(Vb))
t <- bols / se
# Chunk 34: Q2-5b
df6 <- data.frame(col1=names(regressors),
col2=bols,
col3=se,
col4=t
)
colnames(df6) <- c("variable", "estimate", "s.e.", "t")
# Chunk 35: chunk5b-table
print(xtable(df6, caption="OLS Estimation - Wage data", digits=4), include.rownames=FALSE,
latex.environment="center", caption.placement="top", table.placement="!h", sanitize.text.function=function(x){x})
# Chunk 36: R15
proc.time()-tic
SSRcorr
SSRindep
plot(1:5)
SSRindep
plot(1:5)
plot(1:6)
1+1
1+1
reticulate::repl_python()
print(1)
no
